plot.dat
reds <- brewer.pal(9, 'Reds')[6]
ggplot(data = filter(plot.dat, trans.step=="food web"),
aes(x = log10(res.mass), y = log10(cons.mass))) +
geom_point(color = "gray", alpha = 0.2) +
labs(x = "\nLog(prey/propagule mass)", y = "Log(predator/1st host mass)\n") +
geom_point(data = filter(plot.dat, trans.step=="propagule to 1st host"),
aes(x = log10(res.mass), y = log10(cons.mass)),
color = reds, alpha = 0.2) +
annotate("text", x = 2.75, y = -3.75, label = "Food web trophic links\n Brose et al. 2006",
size = 6, color = "darkgray") +
annotate("text", x = 2.75, y = -5.5, label = "Propagule to 1st host",
size = 6, color = reds) +
scale_x_continuous(limits = c(-8, 6), breaks = seq(from = -6, to = 6, by = 3)) +
scale_y_continuous(limits = c(-8, 6), breaks = seq(from = -6, to = 6, by = 3))
#export 700 x 500 px as svg; change color of part of axis titles
blues <- brewer.pal(9, 'Blues')[6]
ggplot(data = filter(plot.dat, trans.step=="food web"),
aes(x = log10(res.mass), y = log10(cons.mass))) +
geom_point(color = "gray", alpha = 0.2) +
labs(x = "\nLog(prey/propagule mass)", y = "Log(predator/2nd host mass)\n") +
geom_point(data = filter(plot.dat, trans.step=="propagule to 2nd host"),
aes(x = log10(res.mass), y = log10(cons.mass)),
color = blues, alpha = 0.2) +
annotate("text", x = 2.75, y = -3.75, label = "Food web trophic links\n Brose et al. 2006",
size = 6, color = "darkgray") +
annotate("text", x = 2.75, y = -5.5, label = "Propagule to 2nd host",
size = 6, color = blues) +
scale_x_continuous(limits = c(-8, 6), breaks = seq(from = -6, to = 6, by = 3)) +
scale_y_continuous(limits = c(-8, 6), breaks = seq(from = -6, to = 6, by = 3))
#export 700 x 500 px as svg; change color of part of axis titles
blues <- brewer.pal(9, 'Blues')[6]
ggplot(data = filter(plot.dat, trans.step=="food web"),
aes(x = log10(res.mass), y = log10(cons.mass))) +
geom_point(color = "gray", alpha = 0.2) +
labs(x = "\nLog(resource/propagule mass)", y = "Log(consumer/host mass)\n") +
geom_point(data = filter(plot.dat, trans.step=="propagule to 2nd host"),
aes(x = log10(res.mass), y = log10(cons.mass)),
color = blues, alpha = 0.2) +
annotate("text", x = 2.75, y = -3.75, label = "Food web trophic links\n Brose et al. 2006",
size = 6, color = "darkgray") +
annotate("text", x = 2.75, y = -5.5, label = "Propagule to 2nd host",
size = 6, color = blues) +
scale_x_continuous(limits = c(-8, 6), breaks = seq(from = -6, to = 6, by = 3)) +
scale_y_continuous(limits = c(-8, 6), breaks = seq(from = -6, to = 6, by = 3))
#export 700 x 500 px as svg; change color of part of axis titles
reds <- brewer.pal(9, 'Reds')[6]
ggplot(data = filter(plot.dat, trans.step=="food web"),
aes(x = log10(res.mass), y = log10(cons.mass))) +
geom_point(color = "gray", alpha = 0.2) +
labs(x = "\nLog(resource/propagule mass)", y = "Log(consumer/host mass)\n") +
geom_point(data = filter(plot.dat, trans.step=="propagule to 1st host"),
aes(x = log10(res.mass), y = log10(cons.mass)),
color = reds, alpha = 0.2) +
annotate("text", x = 2.75, y = -3.75, label = "Food web trophic links\n Brose et al. 2006",
size = 6, color = "darkgray") +
annotate("text", x = 2.75, y = -5.5, label = "Propagule to 1st host",
size = 6, color = reds) +
scale_x_continuous(limits = c(-8, 6), breaks = seq(from = -6, to = 6, by = 3)) +
scale_y_continuous(limits = c(-8, 6), breaks = seq(from = -6, to = 6, by = 3))
#export 700 x 500 px as svg; change color of part of axis titles
# Chunk 1
library(dplyr)
library(ggplot2)
library(tidyr)
library(RColorBrewer)
options(stringsAsFactors = FALSE) #never have species lists as factors; always as character vectors
#import host data
setwd("C:/Users/phosp/OneDrive/Documents/Benesh/Proposals_ideas/DFG_eigenestelle/prelim_analyses/propagule_transmission")
dataH <- read.csv(file="CLC_database_hosts.csv", header = TRUE, sep=",")
# Chunk 2
make.trophic.links <- function(species){
# returns all potential trophic links for a parasite species; every higher level host eats every lower level host
# start by filtering hosts for given parasite species
sp<-filter(dataH, Parasite.species == species)%>%
select(Host.species, Host.no, Facultative)
# make all possible links
links<-expand.grid(sp$Host.sp, c(sp$Host.sp, 'propagule'))
names(links)<-c('cons','res')
links <- mutate_all(links, funs(as.character(.)))
# label the hosts as first host, second, etc.
links <- left_join(links, sp, by = c("cons" = "Host.species"))
links <-left_join(links, sp, by = c("res" = "Host.species"))
names(links) <- c("cons", "res", "cons.host.no", "cons.fac", "res.host.no", "res.fac")
links$res.host.no[is.na(links$res.host.no)] <- 0
# eliminate links where lower level hosts consume higher level hosts, e.g. 1st host consumes 2nd host
links <- filter(links, cons.host.no > res.host.no)
return(links)
}
# Chunk 3
link.labeller <- function(num){
# function to give hosts a name instead of number
if(num == 0) {
"propagule"
} else if (num == 1) {
"1st host"
} else if (num == 2) {
"2nd host"
} else if (num == 3) {
"3rd host"
} else if (num == 4) {
"4th host"
} else if (num == 5) {
"5th host"
}
}
# Chunk 4
label.trophic.links <- function(species) {
# make links df for given species
links <- make.trophic.links(species)
# create labels for consumer and resource host
lab1 <- sapply(links$cons.host.no, link.labeller)
lab2 <- sapply(links$res.host.no, link.labeller)
# combine labels and add them to df
links$trans.step <- paste(lab2, "to", lab1)
return(links)
}
# Chunk 5
# loop through parasite species to get trophic links dataset
para.sp <- sort(unique(dataH$Parasite.species))
for(i in seq_along(para.sp)){
if(i==1) {
tl.out <- label.trophic.links(para.sp[i])
tl.out$Parasite.species <- para.sp[i]
} else {
tl.out2 <- label.trophic.links(para.sp[i])
tl.out2$Parasite.species <- para.sp[i]
tl.out <- rbind(tl.out,tl.out2)
}
}
rm(para.sp, i, tl.out2)
# Chunk 6
lcl <- group_by(dataH, Parasite.species)%>%
summarize(lcl = max(Host.no))
tl.out <- left_join(tl.out, lcl)
filter(tl.out, lcl>4)
filter(tl.out, lcl>4)%>%select(Parasite.species)%>%distinct()
library(dplyr)
library(ggplot2)
library(tidyr)
library(RColorBrewer)
options(stringsAsFactors = FALSE) #never have species lists as factors; always as character vectors
#import the life cycle database data tables
setwd("C:/Users/phosp/OneDrive/Documents/Benesh/Proposals_ideas/DFG_eigenestelle/prelim_analyses/adult_size_lcl/")
dataH <- read.csv(file="CLC_database_hosts.csv", header = TRUE, sep=",")
dataL <- read.csv(file="CLC_database_lifehistory.csv", header = TRUE, sep=",")
names(dataL)
table(dataL$Stage)
names(dataL)
filter(dataL, is.na(Asexual))%>% # remove data for asexual species
filter(Stage == 'adult')$Sex
filter(dataL, is.na(Asexual))%>% # remove data for asexual species
filter(Stage == 'adult')
filter(dataL, is.na(Asexual))%>% # remove data for asexual species
filter(Stage == 'adult', Sex == 'f' | is.na(Sex))
filter(dataL, is.na(Asexual))%>% # remove data for asexual species
filter(Stage == 'adult')
filter(dataL, is.na(Asexual))%>% # remove data for asexual species
filter(Stage == 'adult', Sex == 'm')
filter(dataL, is.na(Asexual))%>% # remove data for asexual species
filter(Stage == 'adult', Sex == 'f' | is.na(Sex))
filter(dataL, is.na(Asexual))%>% # remove data for asexual species
filter(Stage == 'adult')
1250 + 2681
names(dataL)
dataL <- filter(dataL, is.na(Asexual))%>% # remove data for asexual species
filter(Stage == 'adult', (Sex == 'f' | is.na(Sex)) ) # remove adult males
table(dataL$Shape)
table(dataL$Shape)
# calculate a biovolume (mm3) from lengths, widths, and shapes
dataL$biovolume <- NA
dataL$biovolume <- as.numeric(dataL$biovolume)
# if shape is cylinder, elongate, whip, calculate volume as a cylinder
sv <- which(dataL$Shape == "cylinder" | dataL$Shape == "thread-like" | dataL$Shape == "whip")
dataL$biovolume[sv] <-
pi * (dataL$Width[sv]/2)^2 * dataL$Length[sv]
# if shape is coiled, sphere, ellipsoid, calculate volume as an ellipsoid
sv <- which(dataL$Shape == "coiled" | dataL$Shape == "sphere" | dataL$Shape == "ellipsoid")
dataL$biovolume[sv] <-
4/3 * pi * dataL$Length[sv]/2 * dataL$Width[sv]/4
#if shape is a ribbon, leaf, calculate volume as an area
sv <- which(dataL$Shape == "ribbon" | dataL$Shape == "leaf")
dataL$biovolume[sv] <-
dataL$Length[sv] * dataL$Width[sv]
rm(sv)
dataL <- mutate(dataL, biovolume2 =
if_else(Shape %in% c("cylinder", "thread-like", "whip"),
pi * (Width/2)^2 * Length,
if_else(Shape %in% c("coiled", "sphere", "ellipsoid"),
4/3 * pi * Length/2 * Width/4,
Length * Width)))
dataL$biovolume = dataL$biovolume2
dataL$biovolume == dataL$biovolume2
table(dataL$Shape)
# calculate a biovolume (mm3) from lengths, widths, and shapes
dataL$biovolume <- NA
dataL$biovolume <- as.numeric(dataL$biovolume)
# if shape is cylinder, elongate, whip, calculate volume as a cylinder
sv <- which(dataL$Shape == "cylinder" | dataL$Shape == "thread-like" | dataL$Shape == "whip")
dataL$biovolume[sv] <-
pi * (dataL$Width[sv]/2)^2 * dataL$Length[sv]
# if shape is coiled, sphere, ellipsoid, calculate volume as an ellipsoid
sv <- which(dataL$Shape == "coiled" | dataL$Shape == "sphere" | dataL$Shape == "ellipsoid")
dataL$biovolume[sv] <-
4/3 * pi * dataL$Length[sv]/2 * dataL$Width[sv]/4
#if shape is a ribbon, leaf, calculate volume as an area
sv <- which(dataL$Shape == "ribbon" | dataL$Shape == "leaf")
dataL$biovolume[sv] <-
dataL$Length[sv] * dataL$Width[sv]
rm(sv)
dataL <- mutate(dataL, biovolume2 =
if_else(Shape %in% c("cylinder", "thread-like", "whip"),
pi * (Width/2)^2 * Length,
if_else(Shape %in% c("coiled", "sphere", "ellipsoid"),
4/3 * pi * Length/2 * Width/4,
Length * Width)))
dataL$biovolume == dataL$biovolume2
dataL$biovolume != dataL$biovolume2
sum(dataL$biovolume != dataL$biovolume2)
sum(dataL$biovolume != dataL$biovolume2, na.rm=T)
sum(dataL$biovolume == dataL$biovolume2, na.rm=T)
library(dplyr)
library(ggplot2)
library(tidyr)
library(RColorBrewer)
options(stringsAsFactors = FALSE) #never have species lists as factors; always as character vectors
#import the life cycle database data tables
setwd("C:/Users/phosp/OneDrive/Documents/Benesh/Proposals_ideas/DFG_eigenestelle/prelim_analyses/adult_size_lcl/")
dataH <- read.csv(file="CLC_database_hosts.csv", header = TRUE, sep=",")
dataL <- read.csv(file="CLC_database_lifehistory.csv", header = TRUE, sep=",")
# filter to adult stages
dataL <- filter(dataL, is.na(Asexual))%>% # remove data for asexual species
filter(Stage == 'adult', (Sex == 'f' | is.na(Sex)) ) # remove adult males
dataL <- mutate(dataL, biovolume =
if_else(Shape %in% c("cylinder", "thread-like", "whip"),
pi * (Width/2)^2 * Length, # calculate volume as a cylinder
if_else(Shape %in% c("coiled", "sphere", "ellipsoid"),
4/3 * pi * Length/2 * Width/4, # calculate volume as a ellipsoid
Length * Width # calculate volume as area for remaining ribbon, leaf shapes
)))
names(dataL)
dataL.sp <- group_by(dataL.sp, Parasite.species)%>%
summarize(Biovolume = mean(biovolume, na.rm=T))
library(dplyr)
library(ggplot2)
library(tidyr)
library(RColorBrewer)
options(stringsAsFactors = FALSE) #never have species lists as factors; always as character vectors
#import the life cycle database data tables
setwd("C:/Users/phosp/OneDrive/Documents/Benesh/Proposals_ideas/DFG_eigenestelle/prelim_analyses/adult_size_lcl/")
dataH <- read.csv(file="CLC_database_hosts.csv", header = TRUE, sep=",")
dataL <- read.csv(file="CLC_database_lifehistory.csv", header = TRUE, sep=",")
# filter to adult stages
dataL <- filter(dataL, is.na(Asexual))%>% # remove data for asexual species
filter(Stage == 'adult', (Sex == 'f' | is.na(Sex)) ) # remove adult males
dataL <- mutate(dataL, biovolume =
if_else(Shape %in% c("cylinder", "thread-like", "whip"),
pi * (Width/2)^2 * Length, # calculate volume as a cylinder
if_else(Shape %in% c("coiled", "sphere", "ellipsoid"),
4/3 * pi * Length/2 * Width/4, # calculate volume as a ellipsoid
Length * Width # calculate volume as area for remaining ribbon, leaf shapes
)),
biovolume = biovolume * 1.1) # covert to biomass with assumed 1.1. g/cm3 tissue density
# species averages
dataL.sp <- group_by(dataL, Parasite.species)%>%
summarize(Biovolume = mean(biovolume, na.rm=T))
dataL.sp
length(dataL.sp$Parasite.species
length(dataL.sp$Parasite.species)
length(dataL.sp$Parasite.species)
length(unique(dataL$Parasite.species))
length(unique(dataL$Parasite.species))
minLCL <- filter(dataH, Facultative == "no")%>%
group_by(Parasite.species)%>%summarise(minLCL = length(unique(Host.no)))
maxLCL <- group_by(dataH, Parasite.species)%>%summarize(maxLCL = max(Host.no))
left_join(dataL.sp, maxLCL)
#add min and max life cycle length information to species level data
maxLCL <- group_by(dataH, Parasite.species)%>%summarize(maxLCL = max(Host.no))
minLCL <- filter(dataH, Facultative == "no")%>%
group_by(Parasite.species)%>%summarise(minLCL = length(unique(Host.no)))
dataL.sp <- left_join(dataL.sp, maxLCL)
dataL.sp <- left_join(dataL.sp, minLCL)
dataL.sp
theme.o <- theme_update(axis.text = element_text(colour="black", size = 15),
axis.title = element_text(colour="black", size = 18, face = "bold", lineheight=0.25),
axis.ticks = element_line(colour="black"),
panel.border = element_rect(colour = "black",fill=NA),
panel.grid.minor=element_blank(),
panel.grid.major=element_line(color="gray",linetype = "dotted"),
panel.background= element_rect(fill = NA))
ggplot(data = filter(dataL.sp, Stage == "adult"),
aes(x=maxLCL.fac, y=log10(Biovolume))) +
geom_boxplot(outlier.shape = 21) +
labs(y="Log(Biovolume)\n", x="\nLife cycle length") +
theme(strip.text = element_blank(),
panel.grid.major.x = element_blank())
ggplot(data = dataL.sp,
aes(x = maxLCL, y=log10(Biovolume))) +
geom_boxplot(outlier.shape = 21) +
labs(y="Log(Biovolume)\n", x="\nLife cycle length") +
theme(strip.text = element_blank(),
panel.grid.major.x = element_blank())
ggplot(data = dataL.sp,
aes(x = factor(maxLCL), y=log10(Biovolume))) +
geom_boxplot(outlier.shape = 21) +
labs(y="Log(Biovolume)\n", x="\nLife cycle length") +
theme(strip.text = element_blank(),
panel.grid.major.x = element_blank())
ggplot(data = dataL.sp,
aes(x = factor(maxLCL), y = log10(Biovolume))) +
geom_boxplot(outlier.color = "white", width = 0.9) +
geom_jitter(width = 0.5, color = "red", alpha = 0.2) +
labs(y="Log(Adult biovolume)\n", x="\nLife cycle length") +
theme(strip.text = element_blank(),
panel.grid.major.x = element_blank())
ggplot(data = dataL.sp,
aes(x = factor(maxLCL), y = log10(Biovolume))) + geom_point()
ggplot(data = dataL.sp,
aes(x = factor(maxLCL), y = log10(Biovolume))) +
geom_point() +
geom_smooth(method = 'lm', se = F) +
labs(y="Log(Adult biovolume)\n", x="\nLife cycle length")
ggplot(data = dataL.sp,
aes(x = factor(maxLCL), y = log10(Biovolume))) +
geom_point(alpha = 0.3) +
geom_smooth(method = 'lm', se = F) +
labs(y="Log(Adult biovolume)\n", x="\nLife cycle length")
ggplot(data = dataL.sp,
aes(x = factor(maxLCL), y = log10(Biovolume))) +
geom_point(alpha = 0.2) +
geom_smooth(method = 'lm', se = F) +
labs(y="Log(Adult biovolume)\n", x="\nLife cycle length")
ggplot(data = dataL.sp,
aes(x = maxLCL, y = log10(Biovolume))) +
geom_point(alpha = 0.2) +
geom_smooth(method = 'lm', se = F) +
labs(y="Log(Adult biovolume)\n", x="\nLife cycle length")
ggplot(data = dataL.sp,
aes(x = maxLCL, y = log10(Biovolume))) +
geom_point(alpha = 0.2) +
geom_smooth(se = F) +
labs(y="Log(Adult biovolume)\n", x="\nLife cycle length")
ggplot(data = dataL.sp,
aes(x = maxLCL, y = log10(Biovolume))) +
geom_point(alpha = 0.2) +
geom_smooth(method = 'lm', se = F) +
labs(y="Log(Adult biovolume)\n", x="\nLife cycle length")
ggplot(data = dataL.sp,
aes(x = maxLCL, y = log10(Biovolume))) +
geom_point(alpha = 0.2, position = position_jitter(height = 0, width = 0.1)) +
geom_smooth(method = 'lm', se = F) +
labs(y="Log(Adult biovolume)\n", x="\nLife cycle length")
ggplot(data = dataL.sp,
aes(x = maxLCL, y = log10(Biovolume))) +
geom_point(alpha = 0.3, position = position_jitter(height = 0, width = 0.1)) +
geom_smooth(method = 'lm', se = F) +
labs(y="Log(Adult biovolume)\n", x="\nLife cycle length")
mdl <- lm(log10(Biovolume) ~ maxLCL, data = dataL.sp)
summary(mdl)
dataL.sp <- mutate(dataL.sp, maxLCL.fac = factor(maxLCL,
levels = c("1", "2", "3", "4", "4"),
labels = c("1", "2", "3", ">3")))
dataL.sp <- mutate(dataL.sp, maxLCL.fac = factor(maxLCL,
levels = c("1", "2", "3", "4", "4"),
labels = c("1", "2", "3", ">3", ">3")))
dataL.sp <- mutate(dataL.sp, maxLCL.fac = factor(maxLCL,
levels = c("1", "2", "3", "4", "4")),
maxLCL.fac = factor(maxLCL.fac, labels = c("1", "2", "3", ">3")))
dataL.sp
levels(dataL.sp$maxLCL.fac)
dataL.sp <- mutate(dataL.sp, maxLCL.fac = if_else(maxLCL > 3, 4, maxLCL),
maxLCL.fac = factor(maxLCL.fac, labels = c("1", "2", "3", ">3")))
dataL.sp
mutate(dataL.sp, maxLCL.fac = if_else(maxLCL > 3, 4, maxLCL)
)
class(4)
type(4)
as.integer(4)
dataL.sp <- mutate(dataL.sp, maxLCL.fac = if_else(maxLCL > 3, as.integer(4), maxLCL),
maxLCL.fac = factor(maxLCL.fac, labels = c("1", "2", "3", ">3")))
dataL.sp
ggplot(data = dataL.sp,
aes(x = maxLCL.fac, y = log10(Biovolume))) +
geom_boxplot(outlier.color = "white", width = 0.9) +
geom_jitter(width = 0.2, color = "red", alpha = 0.2) +
labs(y="Log(Adult biovolume)\n", x="\nLife cycle length")
ggplot(data = dataL.sp,
aes(x = maxLCL.fac, y = log10(Biovolume))) +
geom_boxplot(outlier.color = "white", width = 0.9) +
geom_jitter(width = 0.2, color = "red", alpha = 0.2) +
labs(y="Log(Adult biovolume)\n", x="\nLife cycle length") +
theme(panel.grid.major.x = element_blank())
sum(!is.na(dataL.sp$Biovolume))
dataH
names(dataH)
table(dataH$Def.int, dataH$Stage)
names(dataH)
table(dataH$Asexual)
host.size
#host mass dataset
host.size <- read.csv(file="collated_host_mass_data.csv", header = TRUE, sep=",")
# host size either a length or a mass; restrict to just masses
host.size <- filter(host.size, !is.na(body.mass))%>%
select(binomial, body.mass)%>%
group_by(binomial)%>%
summarize(body.mass = mean(body.mass)) # some species have multiple entries, so avg them
host.size
dataH$Host.species
dataH <- filter(dataH, Asexual == 'none')%>% # remove data for asexual species
filter(Def.int == 'def', Typical.host == 'typical') # filter to just typical definitive hosts
dataH$Host.species
#host mass dataset
host.size <- read.csv(file="collated_host_mass_data.csv", header = TRUE, sep=",")
# host size either a length or a mass; restrict to just masses
host.size <- filter(host.size, !is.na(body.mass))%>%
select(binomial, body.mass)%>%
group_by(binomial)%>%
summarize(body.mass = mean(body.mass)) # some species have multiple entries, so avg them
# filter host data to adult stages
dataH <- filter(dataH, Asexual == 'none')%>% # remove data for asexual species
filter(Def.int == 'def', Typical.host == 'typical') # filter to just typical definitive hosts
# add host mass data to host species
dataH <- left_join(dataH, host.size, by = c("Host.species" = "binomial"))
table(is.na(dataH$body.mass))
dataH$Stage
dataH <- group_by(dataH, Parasite.species)%>%summarise(host.mass = mean(host.mass, na.rm=T)) #takes species avg
dataH <- group_by(dataH, Parasite.species)%>%summarise(host.mass = mean(body.mass, na.rm=T)) #takes species avg
dataH
!is.nan(dataH$host.mass)
sum(!is.nan(dataH$host.mass))
dataL.sp
dataH.sp
dataH
dataL.sp <- left_join(dataL.sp, dataH)
dataL.sp
qplot(data = dataL.sp, x = log10(host.mass), y = log10(Biovolume)) + theme_bw() + geom_smooth()
out <- glm(log10(Biovolume) ~ log10(host.mass), data = dataL.sp)
summary(out) #weak relationship
host.tl <- read.csv(file = "TV_dryad.csv", header = TRUE, sep = ",")
host.tl
ggplot(dataL.sp, aes(x = log10(host.mass), y = log10(Biovolume))) +
geom_point()
ggplot(dataL.sp, aes(x = log10(host.mass), y = log10(Biovolume))) +
geom_point() +
geom_smooth(se = F)
ggplot(dataL.sp, aes(x = log10(host.mass), y = log10(Biovolume))) +
geom_point() +
geom_smooth(se = F) +
labs(x = "Log(Definitive host mass)", y = "Log(Adult worm biovolume)")
host.tl
left_join(dataL.sp, host.tl)
host.tl <- read.csv(file = "TV_dryad.csv", header = TRUE, sep = ",")
host.tl <- select(host.tl, Parasite.species = Species, Min_TL, Max_TL, Avg_TL)
left_join(dataL.sp, host.tl)
# trophic level data from my tropic vacuum study
host.tl <- read.csv(file = "TV_dryad.csv", header = TRUE, sep = ",")
# reduce to needed variables
host.tl <- select(host.tl, Parasite.species = Species, Min_TL, Max_TL, Avg_TL)
#add host trophic levels to life history data
dataL.sp <- left_join(dataL.sp, host.tl)
ggplot(dataL.sp, aes(x = Avg_TL, y = log10(Biovolume))) +
geom_point() +
geom_smooth(se = F) +
labs(x = "Definitive host trophic level", y = "Log(Adult worm biovolume)")
ggplot(dataL.sp, aes(x = Avg_TL, y = log10(Biovolume))) +
geom_point(position = position_jitter(width = 0.1, height = 0)) +
geom_smooth(se = F) +
labs(x = "Definitive host trophic level", y = "Log(Adult worm biovolume)")
ggplot(dataL.sp, aes(x = Avg_TL, y = log10(Biovolume))) +
geom_point(position = position_jitter(width = 0.05, height = 0)) +
geom_smooth(se = F) +
labs(x = "Definitive host trophic level", y = "Log(Adult worm biovolume)")
ggplot(dataL.sp, aes(x = Avg_TL, y = log10(Biovolume))) +
geom_point(position = position_jitter(width = 0.03, height = 0)) +
geom_smooth(se = F) +
labs(x = "Definitive host trophic level", y = "Log(Adult worm biovolume)")
ggplot(dataL.sp, aes(x = Avg_TL, y = log10(host.mass))) +
geom_point(position = position_jitter(width = 0.03, height = 0)) +
geom_smooth(method = 'lm', se = F, color = 'darkgray') +
labs(x = "Definitive host trophic level", y = "Log(Adult worm biovolume)")
ggplot(dataL.sp, aes(x = Avg_TL, y = log10(host.mass))) +
geom_point(position = position_jitter(width = 0.03, height = 0)) +
geom_smooth(se = F, color = 'darkgray') +
labs(x = "Definitive host trophic level", y = "Log(Adult worm biovolume)")
ggplot(dataL.sp, aes(x = Max_TL, y = log10(host.mass))) +
geom_point(position = position_jitter(width = 0.03, height = 0)) +
geom_smooth(se = F, color = 'darkgray') +
labs(x = "Definitive host trophic level", y = "Log(Adult worm biovolume)")
ggplot(dataL.sp, aes(x = Min_TL, y = log10(host.mass))) +
geom_point(position = position_jitter(width = 0.03, height = 0)) +
geom_smooth(se = F, color = 'darkgray') +
labs(x = "Definitive host trophic level", y = "Log(Adult worm biovolume)")
Avg
ggplot(dataL.sp, aes(x = Avg_TL, y = log10(host.mass))) +
geom_point(position = position_jitter(width = 0.03, height = 0)) +
geom_smooth(se = F, color = 'darkgray') +
labs(x = "Definitive host trophic level", y = "Log(Adult worm biovolume)")
out <- glm(log10(Biovolume) ~ log10(host.mass) + Avg_TL, data = dataL.nemadult)
out <- glm(log10(Biovolume) ~ log10(host.mass) + Avg_TL, data = dataL.sp)
summary(out) #body size and TL do not explain the same variance in parasite size
out <- glm(log10(Biovolume) ~ log10(host.mass) + Min_TL + Max_TL, data = dataL.sp)
summary(out) #body size and TL do not explain the same variance in parasite size
out <- glm(log10(Biovolume) ~ log10(host.mass) + Avg_TL, data = dataL.sp)
summary(out) #body size and TL do not explain the same variance in parasite size
out <- lm(log10(Biovolume) ~ log10(host.mass) + Avg_TL, data = dataL.sp)
summary(out) #body size and TL do not explain the same variance in parasite size
out <- lm(log10(Biovolume) ~ log10(host.mass) + Min_TL + Max_TL, data = dataL.sp)
summary(out) #body size and TL do not explain the same variance in parasite size
out <- lm(log10(Biovolume) ~ log10(host.mass) + poly(Avg_TL, 2), data = dataL.sp)
dataL.sp
out <- lm(log10(Biovolume) ~ log10(host.mass) + poly(Avg_TL, 2), data = na.omit(dataL.sp))
summary(out) #body size and TL do not explain the same variance in parasite size
