#brose data overlaid with parasite data
ggplot(data = filter(plot.dat, trans.step=="food web"),
aes(x = log10(res.mass), y = log10(cons.mass))) +
geom_point(color = "gray", alpha = 0.2) +
labs(x = "\nLog(prey/propagule mass)", y = "Log(predator/2nd host mass)\n") +
geom_point(data = filter(plot.dat, trans.step=="propagule to 2nd host"), color = "blue", alpha = 0.2) +
annotate("text", x = 2.75, y = -3.75, label = "Food web trophic links\n Brose et al. 2006",
size = 6, color = "darkgray") +
annotate("text", x = 2.75, y = -5.5, label = "Propagule to 2nd host",
size = 6, color = "blue") +
scale_x_continuous(limits = c(-8, 6), breaks = seq(from = -6, to = 6, by = 3))
#export 700 x 500 px as svg; change color of part of axis titles
#brose data overlaid with parasite data
ggplot(data = filter(plot.dat, trans.step=="food web"),
aes(x = log10(res.mass), y = log10(cons.mass))) +
geom_point(color = "gray", alpha = 0.2) +
labs(x = "\nLog(prey/propagule mass)", y = "Log(predator/2nd host mass)\n") +
geom_point(data = filter(plot.dat, trans.step=="1st host to 2nd host"), color = "green", alpha = 0.2) +
annotate("text", x = 2.75, y = -3.75, label = "Food web trophic links\n Brose et al. 2006",
size = 6, color = "darkgray") +
annotate("text", x = 2.75, y = -5.5, label = "1st host to 2nd host",
size = 6, color = "green") +
scale_x_continuous(limits = c(-8, 6), breaks = seq(from = -6, to = 6, by = 3))
#export 700 x 500 px as svg; change color of part of axis titles
1/1000
1.1/1000
# match propagule masses to parasite species in trophic link data
eggies <- dataL$biovolume[match(tl.out$Parasite.species, dataL$Parasite.species)]
# restrict to just propagule stages and add to trophic link data
eggies <- eggies[which(tl.out$res=='propagule')]
tl.out$res.mass[which(tl.out$res=='propagule')] <- eggies
theme.o <- theme_update(axis.text = element_text(colour="black", size = 15),
axis.title = element_text(colour="black", size = 18, face = "bold", lineheight=0.25),
axis.ticks = element_line(colour="black"),
panel.border = element_rect(colour = "black",fill=NA),
panel.grid.minor=element_blank(),
panel.grid.major=element_line(color="gray",linetype = "dotted"),
panel.background= element_rect(fill = NA))
#create single data frame for plotting
brosex <- brose
brosex$Parasite.species <- "not applicable"
brosex$trans.step <- "food web"
brosex <- select(brosex, Parasite.species, cons.mass = Mean.mass..g..consumer,
res.mass = Mean.mass..g..resource, trans.step)
plot.dat <- select(tl.out, Parasite.species, cons.mass, res.mass, trans.step)
plot.dat <- rbind(plot.dat, brosex)
#brose data overlaid with parasite data
ggplot(data = filter(plot.dat, trans.step=="food web"),
aes(x = log10(res.mass), y = log10(cons.mass))) +
geom_point(color = "gray", alpha = 0.2) +
labs(x = "\nLog(prey/propagule mass)", y = "Log(predator/1st host mass)\n") +
geom_point(data = filter(plot.dat, trans.step=="propagule to 1st host"), color = "red", alpha = 0.2) +
annotate("text", x = 2.75, y = -3.75, label = "Food web trophic links\n Brose et al. 2006",
size = 6, color = "darkgray") +
annotate("text", x = 2.75, y = -5.5, label = "Propagule to 1st host",
size = 6, color = "red") +
scale_x_continuous(limits = c(-8, 6), breaks = seq(from = -6, to = 6, by = 3))
#export 700 x 500 px as svg; change color of part of axis titles
names(brose)
names(brosex)
filter(brosex, res.mass > -3.5, res.mass < -2.5)
filter(brosex, res.mass > -3.5, res.mass < -2.5)
filter(brosex, res.mass > -2.5, res.mass < -3.5)
names(brosex)
filter(brosex, res.mass > -3.5 & res.mass < -2.5)
filter(brosex, res.mass < -3.5 & res.mass > -2.5)
brosex
filter(brosex, res.mass > -3.5)
filter(brosex, res.mass > -3.5, res.mass < -2.5)
filter(brosex, res.mass > -3.5, res.mass < 0)
filter(brosex, between(res.mass, -3.5, -2.5))
filter(brosex, res.mass > -3.5 | res.mass < -2.5)
filter(brosex, res.mass > -3.5 | res.mass < -2.5)
summary(brosex)
filter(brosex, log10(res.mass) > -3.5 | log10(res.mass) < -2.5)
filter(brosex, log10(res.mass) > -3.2 | log10(res.mass) < -2.8)
filter(brosex, log10(res.mass) > -3.2, log10(res.mass) < -2.8)
names(brose)
select(brose, name = "Common.name.s..consumer", cons.mass = "Mean.mass..g..consumer")%>%
filter(log10(cons.mass) > -3.2, log10(cons.mass) < -2.8)
select(brose, name = Common.name.s..consumer, cons.mass = Mean.mass..g..consumer)%>%
filter(log10(cons.mass) > -3.2, log10(cons.mass) < -2.8)
names(brose)
select(brose, name = Common.name.s..consumer,
name2 = Taxonomy.consumer,
cons.mass = Mean.mass..g..consumer)%>%
filter(log10(cons.mass) > -3.2, log10(cons.mass) < -2.8)
select(brose, name = Common.name.s..consumer,
name2 = Taxonomy.consumer,
cons.mass = Mean.mass..g..consumer)%>%
filter(log10(cons.mass) < -5)
# load helminth life history data
dataL <- read.csv(file="CLC_database_lifehistory.csv", header = TRUE, sep=",")
# filter to just propagule stages
dataL <- filter(dataL, Host.no == 0)
# calculate a biovolume (mm3) for worm stages from lengths, widths, and shapes
dataL$biovolume <- NA
dataL$biovolume <- as.numeric(dataL$biovolume)
# if shape is cylinder, elongate, whip, calculate volume as a cylinder
sv <- which(dataL$Shape == "cylinder" | dataL$Shape == "thread-like" | dataL$Shape == "whip")
dataL$biovolume[sv] <-
pi * (dataL$Width[sv]/2)^2 * dataL$Length[sv]
# if shape is coiled, sphere, ellipsoid, calculate volume as an ellipsoid
sv <- which(dataL$Shape == "coiled" | dataL$Shape == "sphere" | dataL$Shape == "ellipsoid")
dataL$biovolume[sv] <-
4/3 * pi * dataL$Length[sv]/2 * dataL$Width[sv]/4
dataL <- mutate(dataL, biovolume = biovolume * .0011)%>% # convert mm3 to g (assumes tissue density of 1.1 g/cm3)
select(Parasite.species, Stage, Egg.hatch, biovolume)
warning
warnings()
# load helminth life history data
dataL <- read.csv(file="CLC_database_lifehistory.csv", header = TRUE, sep=",")
# filter to just propagule stages
dataL <- filter(dataL, Host.no == 0)
# calculate a biovolume (mm3) for worm stages from lengths, widths, and shapes
dataL$biovolume <- NA
dataL$biovolume <- as.numeric(dataL$biovolume)
# if shape is cylinder, elongate, whip, calculate volume as a cylinder
sv <- which(dataL$Shape == "cylinder" | dataL$Shape == "thread-like" | dataL$Shape == "whip")
dataL$biovolume[sv] <-
pi * (dataL$Width[sv]/2)^2 * dataL$Length[sv]
# if shape is coiled, sphere, ellipsoid, calculate volume as an ellipsoid
sv <- which(dataL$Shape == "coiled" | dataL$Shape == "sphere" | dataL$Shape == "ellipsoid")
dataL$biovolume[sv] <-
4/3 * pi * dataL$Length[sv]/2 * dataL$Width[sv]/4
dataL <- mutate(dataL, biovolume = biovolume * .0011)%>% # convert mm3 to g (assumes tissue density of 1.1 g/cm3)
select(Parasite.species, Stage, Egg.hatch, biovolume)
#distinguish species transmitted by either eggs or hatched propagules
prop <- select(dataL, Parasite.species, Egg.hatch)%>%
filter(!is.na(Egg.hatch))%>%distinct()
prop$selector <- "free larva"
prop$selector[which(prop$Egg.hatch == "eaten")] <- "egg"
#this block tags rows that are propagules (host.no=0), but are not the transmission stage (e.g. embryos)
dataL$propagule.selector[
is.na(match(
paste(dataL$Parasite.species, dataL$Stage),
paste(prop$Parasite.species, prop$selector))
)
] <- 1
dataL <- filter(dataL, is.na(propagule.selector))%>%
select(-propagule.selector, -Egg.hatch)%>%
group_by(Parasite.species, Stage)%>%
summarize(biovolume = mean(biovolume, na.rm=T))%>%
filter(!is.nan(biovolume))
# match propagule masses to parasite species in trophic link data
eggies <- dataL$biovolume[match(tl.out$Parasite.species, dataL$Parasite.species)]
# restrict to just propagule stages and add to trophic link data
eggies <- eggies[which(tl.out$res=='propagule')]
tl.out$res.mass[which(tl.out$res=='propagule')] <- eggies
names(brose)
ggplot(data = brose,
aes(x = log10(Mean.mass..g..resource),
y = log10(Mean.mass..g..consumer),
color = Type.of.feeding.interaction)) +
geom_point(color = "gray", alpha = 0.2) +
labs(x = "\nLog(resource mass)", y = "Log(consumer mass)\n") +
scale_x_continuous(limits = c(-8, 6), breaks = seq(from = -6, to = 6, by = 3))
ggplot(data = brose,
aes(x = log10(Mean.mass..g..resource),
y = log10(Mean.mass..g..consumer),
color = Type.of.feeding.interaction)) +
geom_point(alpha = 0.2) +
labs(x = "\nLog(resource mass)", y = "Log(consumer mass)\n") +
scale_x_continuous(limits = c(-8, 6), breaks = seq(from = -6, to = 6, by = 3))
brose<-read.csv(file="Brose_bodysizes_2008_DB.csv", header = TRUE,sep = ",")
ggplot(data = brose,
aes(x = log10(Mean.mass..g..resource),
y = log10(Mean.mass..g..consumer),
color = Type.of.feeding.interaction)) +
geom_point(alpha = 0.2) +
labs(x = "\nLog(resource mass)", y = "Log(consumer mass)\n") +
scale_x_continuous(limits = c(-8, 6), breaks = seq(from = -6, to = 6, by = 3))
table(brose$Type.of.feeding.interaction) #mostly predator interactions, though not exclusively
ggplot(data = filter(brose,
!(Type.of.feeding.interaction %in% c("omnivore", "parasitic", "parasitoid", "pathogen")))
aes(x = log10(Mean.mass..g..resource),
brose<-read.csv(file="Brose_bodysizes_2008_DB.csv", header = TRUE,sep = ",")
# plot data to show different kinds of trophic interactions
ggplot(data = filter(brose,
(Type.of.feeding.interaction %in% c("omnivore", "parasitic", "parasitoid", "pathogen")))
aes(x = log10(Mean.mass..g..resource),
ggplot(data = filter(brose,
(Type.of.feeding.interaction %in% c("omnivore", "parasitic", "parasitoid", "pathogen")))
aes(x = log10(Mean.mass..g..resource),
ggplot(data = filter(brose,
!(Type.of.feeding.interaction %in% c("omnivore", "parasitic", "parasitoid", "pathogen"))),
aes(x = log10(Mean.mass..g..resource),
y = log10(Mean.mass..g..consumer),
color = Type.of.feeding.interaction)) +
geom_point(alpha = 0.2) +
labs(x = "\nLog(resource mass)", y = "Log(consumer mass)\n") +
scale_x_continuous(limits = c(-8, 6), breaks = seq(from = -6, to = 6, by = 3))
ggplot(data = filter(brose,
!(Type.of.feeding.interaction %in% c("omnivore", "parasitic", "parasitoid", "predacious", "pathogen"))),
aes(x = log10(Mean.mass..g..resource),
y = log10(Mean.mass..g..consumer),
color = Type.of.feeding.interaction)) +
geom_point(alpha = 0.2) +
labs(x = "\nLog(resource mass)", y = "Log(consumer mass)\n") +
scale_x_continuous(limits = c(-8, 6), breaks = seq(from = -6, to = 6, by = 3))
table(brose$Type.of.feeding.interaction) #mostly predator interactions, though not exclusively
filter(brose, Type.of.feeding.interaction == "detritivorous")
sapply(brose, function(x) sum(is.na(x)))
ggplot(data = brose,
aes(x = log10(Mean.mass..g..resource),
y = log10(Mean.mass..g..consumer),
color = Type.of.feeding.interaction)) +
geom_point(alpha = 0.2) +
labs(x = "\nLog(resource mass)", y = "Log(consumer mass)\n") +
scale_x_continuous(limits = c(-8, 6), breaks = seq(from = -6, to = 6, by = 3))
brose <- mutate(brose, missing_mass = if_else(is.na(Mean.mass..g..resource), 1,
if_else(Mean.mass..g..consumer), 1, 0))
brose <- mutate(brose, missing_mass = if_else(is.na(Mean.mass..g..resource), 1,
if_else(is.na(Mean.mass..g..consumer), 1, 0)))
select(brose, Mean.mass..g..resource, missing_mass)
names(brose)
ggplot(brose, aes(x = missing_mass, y = Consumer.resource.body.mass.ratio)) + geom_boxplot()
ggplot(brose, aes(x = factor(missing_mass), y = Consumer.resource.body.mass.ratio)) + geom_boxplot()
ggplot(brose, aes(x = factor(missing_mass), y = log10(Consumer.resource.body.mass.ratio))) + geom_boxplot()
brose<-read.csv(file="Brose_bodysizes_2008_DB.csv", header = TRUE,sep = ",")
# plot data to show different kinds of trophic interactions
ggplot(data = brose,
aes(x = log10(Mean.mass..g..resource),
y = log10(Mean.mass..g..consumer),
color = Type.of.feeding.interaction)) +
geom_point(alpha = 0.2) +
labs(x = "\nLog(resource mass)", y = "Log(consumer mass)\n") +
scale_x_continuous(limits = c(-8, 6), breaks = seq(from = -6, to = 6, by = 3))
4400/16866
# look at missing data
brose <- mutate(brose, missing_mass = if_else(is.na(Mean.mass..g..resource), 1,
if_else(is.na(Mean.mass..g..consumer), 1, 0)))
ggplot(brose, aes(x = factor(missing_mass), y = log10(Consumer.resource.body.mass.ratio))) + geom_boxplot()
brose<-read.csv(file="Brose_bodysizes_2008_DB.csv", header = TRUE,sep = ",")
# plot data to show different kinds of trophic interactions
ggplot(data = brose,
aes(x = log10(Mean.mass..g..resource),
y = log10(Mean.mass..g..consumer),
color = Type.of.feeding.interaction)) +
geom_point(alpha = 0.2) +
labs(x = "\nLog(resource mass)", y = "Log(consumer mass)\n") +
scale_x_continuous(limits = c(-8, 6), breaks = seq(from = -6, to = 6, by = 3))
library(dplyr)
library(ggplot2)
library(tidyr)
library(RColorBrewer)
options(stringsAsFactors = FALSE) #never have species lists as factors; always as character vectors
#import host data
setwd("C:/Users/phosp/OneDrive/Documents/Benesh/Proposals_ideas/DFG_eigenestelle/prelim_analyses/propagule_transmission")
dataH <- read.csv(file="CLC_database_hosts.csv", header = TRUE, sep=",")
make.trophic.links <- function(species){
# returns all potential trophic links for a parasite species; every higher level host eats every lower level host
# start by filtering hosts for given parasite species
sp<-filter(dataH, Parasite.species == species)%>%
select(Host.species, Host.no, Facultative)
# make all possible links
links<-expand.grid(sp$Host.sp, c(sp$Host.sp, 'propagule'))
names(links)<-c('cons','res')
links <- mutate_all(links, funs(as.character(.)))
# label the hosts as first host, second, etc.
links <- left_join(links, sp, by = c("cons" = "Host.species"))
links <-left_join(links, sp, by = c("res" = "Host.species"))
names(links) <- c("cons", "res", "cons.host.no", "cons.fac", "res.host.no", "res.fac")
links$res.host.no[is.na(links$res.host.no)] <- 0
# eliminate links where lower level hosts consume higher level hosts, e.g. 1st host consumes 2nd host
links <- filter(links, cons.host.no > res.host.no)
return(links)
}
link.labeller <- function(num){
# function to give hosts a name instead of number
if(num == 0) {
"propagule"
} else if (num == 1) {
"1st host"
} else if (num == 2) {
"2nd host"
} else if (num == 3) {
"3rd host"
} else if (num == 4) {
"4th host"
} else if (num == 5) {
"5th host"
}
}
label.trophic.links <- function(species) {
# make links df for given species
links <- make.trophic.links(species)
# create labels for consumer and resource host
lab1 <- sapply(links$cons.host.no, link.labeller)
lab2 <- sapply(links$res.host.no, link.labeller)
# combine labels and add them to df
links$trans.step <- paste(lab2, "to", lab1)
return(links)
}
# loop through parasite species to get trophic links dataset
para.sp <- sort(unique(dataH$Parasite.species))
for(i in seq_along(para.sp)){
if(i==1) {
tl.out <- label.trophic.links(para.sp[i])
tl.out$Parasite.species <- para.sp[i]
} else {
tl.out2 <- label.trophic.links(para.sp[i])
tl.out2$Parasite.species <- para.sp[i]
tl.out <- rbind(tl.out,tl.out2)
}
}
rm(para.sp, i, tl.out2)
# load size data
host.size <- read.csv(file="collated_host_mass_data.csv", header = TRUE, sep=",")
# add consumer mass
tl.out$cons.mass<-
host.size$body.mass[match(tl.out$cons, host.size$binomial)]
# add resource mass
tl.out$res.mass<-
host.size$body.mass[match(tl.out$res, host.size$binomial)]
# load helminth life history data
dataL <- read.csv(file="CLC_database_lifehistory.csv", header = TRUE, sep=",")
# filter to just propagule stages
dataL <- filter(dataL, Host.no == 0)
# calculate a biovolume (mm3) for worm stages from lengths, widths, and shapes
dataL$biovolume <- NA
dataL$biovolume <- as.numeric(dataL$biovolume)
# if shape is cylinder, elongate, whip, calculate volume as a cylinder
sv <- which(dataL$Shape == "cylinder" | dataL$Shape == "thread-like" | dataL$Shape == "whip")
dataL$biovolume[sv] <-
pi * (dataL$Width[sv]/2)^2 * dataL$Length[sv]
# if shape is coiled, sphere, ellipsoid, calculate volume as an ellipsoid
sv <- which(dataL$Shape == "coiled" | dataL$Shape == "sphere" | dataL$Shape == "ellipsoid")
dataL$biovolume[sv] <-
4/3 * pi * dataL$Length[sv]/2 * dataL$Width[sv]/4
dataL <- mutate(dataL, biovolume = biovolume * .0011)%>% # convert mm3 to g (assumes tissue density of 1.1 g/cm3)
select(Parasite.species, Stage, Egg.hatch, biovolume)
#distinguish species transmitted by either eggs or hatched propagules
prop <- select(dataL, Parasite.species, Egg.hatch)%>%
filter(!is.na(Egg.hatch))%>%distinct()
prop$selector <- "free larva"
prop$selector[which(prop$Egg.hatch == "eaten")] <- "egg"
#this block tags rows that are propagules (host.no=0), but are not the transmission stage (e.g. embryos)
dataL$propagule.selector[
is.na(match(
paste(dataL$Parasite.species, dataL$Stage),
paste(prop$Parasite.species, prop$selector))
)
] <- 1
dataL <- filter(dataL, is.na(propagule.selector))%>%
select(-propagule.selector, -Egg.hatch)%>%
group_by(Parasite.species, Stage)%>%
summarize(biovolume = mean(biovolume, na.rm=T))%>%
filter(!is.nan(biovolume))
# match propagule masses to parasite species in trophic link data
eggies <- dataL$biovolume[match(tl.out$Parasite.species, dataL$Parasite.species)]
# restrict to just propagule stages and add to trophic link data
eggies <- eggies[which(tl.out$res=='propagule')]
tl.out$res.mass[which(tl.out$res=='propagule')] <- eggies
brose<-read.csv(file="Brose_bodysizes_2008_DB.csv", header = TRUE,sep = ",")
# plot data to show different kinds of trophic interactions
ggplot(data = brose,
aes(x = log10(Mean.mass..g..resource),
y = log10(Mean.mass..g..consumer),
color = Type.of.feeding.interaction)) +
geom_point(alpha = 0.2) +
labs(x = "\nLog(resource mass)", y = "Log(consumer mass)\n") +
scale_x_continuous(limits = c(-8, 6), breaks = seq(from = -6, to = 6, by = 3))
# look at missing data
brose <- mutate(brose, missing_mass = if_else(is.na(Mean.mass..g..resource), 1,
if_else(is.na(Mean.mass..g..consumer), 1, 0)))
ggplot(brose, aes(x = factor(missing_mass), y = log10(Consumer.resource.body.mass.ratio))) + geom_boxplot()
brose$Parasite.species <- "not applicable"
brose$trans.step <- "food web"
brose <- select(brose, Parasite.species, cons.mass = Mean.mass..g..consumer,
res.mass = Mean.mass..g..resource, trans.step)
plot.dat <- select(tl.out, Parasite.species, cons.mass, res.mass, trans.step)
plot.dat <- rbind(plot.dat, brose)
theme.o <- theme_update(axis.text = element_text(colour="black", size = 15),
axis.title = element_text(colour="black", size = 18, face = "bold", lineheight=0.25),
axis.ticks = element_line(colour="black"),
panel.border = element_rect(colour = "black",fill=NA),
panel.grid.minor=element_blank(),
panel.grid.major=element_line(color="gray",linetype = "dotted"),
panel.background= element_rect(fill = NA))
#brose data overlaid with parasite data
ggplot(data = filter(plot.dat, trans.step=="food web"),
aes(x = log10(res.mass), y = log10(cons.mass))) +
geom_point(color = "gray", alpha = 0.2) +
labs(x = "\nLog(prey/propagule mass)", y = "Log(predator/1st host mass)\n") +
geom_point(data = filter(plot.dat, trans.step=="propagule to 1st host"), color = "red", alpha = 0.2) +
annotate("text", x = 2.75, y = -3.75, label = "Food web trophic links\n Brose et al. 2006",
size = 6, color = "darkgray") +
annotate("text", x = 2.75, y = -5.5, label = "Propagule to 1st host",
size = 6, color = "red") +
scale_x_continuous(limits = c(-8, 6), breaks = seq(from = -6, to = 6, by = 3))
#export 700 x 500 px as svg; change color of part of axis titles
#brose data overlaid with parasite data
ggplot(data = filter(plot.dat, trans.step=="food web"),
aes(x = log10(res.mass), y = log10(cons.mass))) +
geom_point(color = "gray", alpha = 0.2) +
labs(x = "\nLog(prey/propagule mass)", y = "Log(predator/2nd host mass)\n") +
geom_point(data = filter(plot.dat, trans.step=="propagule to 2nd host"), color = "blue", alpha = 0.2) +
annotate("text", x = 2.75, y = -3.75, label = "Food web trophic links\n Brose et al. 2006",
size = 6, color = "darkgray") +
annotate("text", x = 2.75, y = -5.5, label = "Propagule to 2nd host",
size = 6, color = "blue") +
scale_x_continuous(limits = c(-8, 6), breaks = seq(from = -6, to = 6, by = 3))
#export 700 x 500 px as svg; change color of part of axis titles
names(brose)
brose<-read.csv(file="Brose_bodysizes_2008_DB.csv", header = TRUE,sep = ",")
brose
names(brose)
ggplot(brose, aes(x = log10(Mean.length..m..resource), y = log10(Mean.mass..g..resource))) + geom_point()
ggplot(brose, aes(x = log10(Mean.length..m..resource), y = log10(Mean.mass..g..resource))) + geom_point()
ggplot(brose, aes(x = log10(Mean.length..m..consumer), y = log10(Mean.mass..g..consumer))) + geom_point()
ggplot(brose, aes(x = log10(Mean.length..m..consumer), y = log10(Mean.mass..g..consumer))) + geom_point() + geom_smooth()
#brose data overlaid with parasite data
ggplot(data = filter(plot.dat, trans.step=="food web"),
aes(x = log10(res.mass), y = log10(cons.mass))) +
geom_point(color = "gray", alpha = 0.2) +
labs(x = "\nLog(prey/propagule mass)", y = "Log(predator/2nd host mass)\n") +
geom_point(data = filter(plot.dat, trans.step=="1st host to 2nd host"), color = "green", alpha = 0.2) +
annotate("text", x = 2.75, y = -3.75, label = "Food web trophic links\n Brose et al. 2006",
size = 6, color = "darkgray") +
annotate("text", x = 2.75, y = -5.5, label = "1st host to 2nd host",
size = 6, color = "green") +
scale_x_continuous(limits = c(-8, 6), breaks = seq(from = -6, to = 6, by = 3))
#export 700 x 500 px as svg; change color of part of axis titles
#brose data overlaid with parasite data
ggplot(data = filter(plot.dat, trans.step=="food web"),
aes(x = log10(res.mass), y = log10(cons.mass))) +
geom_point(color = "gray", alpha = 0.2) +
labs(x = "\nLog(prey/propagule mass)", y = "Log(predator/2nd host mass)\n") +
geom_point(data = filter(plot.dat, trans.step=="1st host to 3rd host"), color = "green", alpha = 0.2) +
annotate("text", x = 2.75, y = -3.75, label = "Food web trophic links\n Brose et al. 2006",
size = 6, color = "darkgray") +
annotate("text", x = 2.75, y = -5.5, label = "1st host to 3rd host",
size = 6, color = "green") +
scale_x_continuous(limits = c(-8, 6), breaks = seq(from = -6, to = 6, by = 3))
ggplot(data = filter(plot.dat, trans.step=="food web"),
aes(x = log10(res.mass), y = log10(cons.mass))) +
geom_bin2d()
ggplot(data = filter(plot.dat, trans.step=="food web"),
aes(x = log10(res.mass), y = log10(cons.mass))) +
geom_contour()
ggplot(data = filter(plot.dat, trans.step=="food web"),
aes(x = log10(res.mass), y = log10(cons.mass), z = density)) +
geom_contour()
ggplot(data = filter(plot.dat, trans.step=="food web"),
aes(x = log10(res.mass), y = log10(cons.mass))) +
geom_density_2d()
ggplot(data = filter(plot.dat, trans.step=="food web"),
aes(x = log10(res.mass), y = log10(cons.mass))) +
geom_density_2d() +
labs(x = "\nLog(prey/propagule mass)", y = "Log(predator/2nd host mass)\n") +
geom_point(data = filter(plot.dat, trans.step=="1st host to 3rd host"), color = "green", alpha = 0.2) +
annotate("text", x = 2.75, y = -3.75, label = "Food web trophic links\n Brose et al. 2006",
size = 6, color = "darkgray") +
annotate("text", x = 2.75, y = -5.5, label = "1st host to 3rd host",
size = 6, color = "green") +
scale_x_continuous(limits = c(-8, 6), breaks = seq(from = -6, to = 6, by = 3))
ggplot(data = filter(plot.dat, trans.step=="food web"),
aes(x = log10(res.mass), y = log10(cons.mass))) +
geom_bin2d() +
labs(x = "\nLog(prey/propagule mass)", y = "Log(predator/2nd host mass)\n") +
geom_point(data = filter(plot.dat, trans.step=="1st host to 3rd host"), color = "green", alpha = 0.2) +
annotate("text", x = 2.75, y = -3.75, label = "Food web trophic links\n Brose et al. 2006",
size = 6, color = "darkgray") +
annotate("text", x = 2.75, y = -5.5, label = "1st host to 3rd host",
size = 6, color = "green") +
scale_x_continuous(limits = c(-8, 6), breaks = seq(from = -6, to = 6, by = 3))
ggplot(data = filter(plot.dat, trans.step=="food web"),
aes(x = log10(res.mass), y = log10(cons.mass))) +
geom_bin2d() +
labs(x = "\nLog(prey/propagule mass)", y = "Log(predator/2nd host mass)\n") +
geom_point(data = filter(plot.dat, trans.step=="propagule to 1st host"), color = "green", alpha = 0.2) +
annotate("text", x = 2.75, y = -3.75, label = "Food web trophic links\n Brose et al. 2006",
size = 6, color = "darkgray") +
annotate("text", x = 2.75, y = -5.5, label = "1st host to 3rd host",
size = 6, color = "green") +
scale_x_continuous(limits = c(-8, 6), breaks = seq(from = -6, to = 6, by = 3))
#brose data overlaid with parasite data
ggplot(data = filter(plot.dat, trans.step=="food web"),
aes(x = log10(res.mass), y = log10(cons.mass))) +
geom_bin2d(bins = 30) +
labs(x = "\nLog(prey/propagule mass)", y = "Log(predator/2nd host mass)\n") +
geom_point(data = filter(plot.dat, trans.step=="propagule to 1st host"), color = "green", alpha = 0.2) +
annotate("text", x = 2.75, y = -3.75, label = "Food web trophic links\n Brose et al. 2006",
size = 6, color = "darkgray") +
annotate("text", x = 2.75, y = -5.5, label = "1st host to 3rd host",
size = 6, color = "green") +
scale_x_continuous(limits = c(-8, 6), breaks = seq(from = -6, to = 6, by = 3))
#brose data overlaid with parasite data
ggplot(data = filter(plot.dat, trans.step=="food web"),
aes(x = log10(res.mass), y = log10(cons.mass))) +
geom_bin2d(bins = 50) +
labs(x = "\nLog(prey/propagule mass)", y = "Log(predator/2nd host mass)\n") +
geom_point(data = filter(plot.dat, trans.step=="propagule to 1st host"), color = "green", alpha = 0.2) +
annotate("text", x = 2.75, y = -3.75, label = "Food web trophic links\n Brose et al. 2006",
size = 6, color = "darkgray") +
annotate("text", x = 2.75, y = -5.5, label = "1st host to 3rd host",
size = 6, color = "green") +
scale_x_continuous(limits = c(-8, 6), breaks = seq(from = -6, to = 6, by = 3))
#brose data overlaid with parasite data
ggplot(data = filter(plot.dat, trans.step=="food web"),
aes(x = log10(res.mass), y = log10(cons.mass))) +
geom_point(color = "gray", alpha = 0.2) +
labs(x = "\nLog(prey/propagule mass)", y = "Log(predator/1st host mass)\n") +
geom_point(data = filter(plot.dat, trans.step=="propagule to 1st host"), color = "red", alpha = 0.2) +
annotate("text", x = 2.75, y = -3.75, label = "Food web trophic links\n Brose et al. 2006",
size = 6, color = "darkgray") +
annotate("text", x = 2.75, y = -5.5, label = "Propagule to 1st host",
size = 6, color = "red") +
scale_x_continuous(limits = c(-8, 6), breaks = seq(from = -6, to = 6, by = 3)) +
scale_y_continuous(limits = c(-8, 6), breaks = seq(from = -6, to = 6, by = 3))
#export 700 x 500 px as svg; change color of part of axis titles
